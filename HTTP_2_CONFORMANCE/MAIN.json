{
  "id": "MAIN",
  "initial": "INIT",
  "states": {
    "INIT": {
      "on": {
        "STARTED": [
          {
            "target": "SET_TIMEOUT_TARGET",
            "actions": [],
            "meta": {}
          }
        ]
      }
    },
    "SET_TIMEOUT_TARGET": {
      "entry": [
        {
          "type": "redirect (TIMEOUT TIMEOUT)"
        },
        {
          "type": "done"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "SETTING_UP_CONTROL_CHANNEL",
            "actions": []
          }
        ]
      }
    },
    "SETTING_UP_CONTROL_CHANNEL": {
      "entry": [
        {
          "type": "get_from_file (variables role) (role)"
        },
        {
          "type": "get_from_file (variables client) (client_val)"
        },
        {
          "type": "get_from_file (variables controller_conf_filename) (controller_conf_filename)"
        },
        {
          "type": "call (CONTROL_CHANNEL_SET_UP role controller_conf_filename) (event ctrl)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "CONTROL_CHANNEL_READY": [
          {
            "target": "BUILDING_HTTP2_CLIENT",
            "cond": "equal (role client_val)",
            "actions": [
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (client_val) (client_val)"
              }
            ]
          },
          {
            "target": "BUILDING_HTTP2_SERVER",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              }
            ]
          }
        ]
      }
    },
    "BUILDING_HTTP2_CLIENT": {
      "entry": [
        {
          "type": "set (1) (waiting_time)"
        },
        {
          "type": "wait (waiting_time)"
        },
        {
          "type": "call (HTTP2_CLIENT_BUILD) (event client)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "CLIENT_BUILT": [
          {
            "target": "WAITING_SERVER_PREFACE",
            "actions": [
              {
                "type": "assign (client) (client)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (client_val) (client_val)"
              },
              {
                "type": "assign (role) (role)"
              }
            ]
          }
        ]
      }
    },
    "BUILDING_HTTP2_SERVER": {
      "entry": [
        {
          "type": "call (HTTP2_SERVER_BUILD) (event server)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "SERVER_BUILT": [
          {
            "target": "WAITING_CLIENT_PREFACE",
            "actions": [
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (client_val) (client_val)"
              },
              {
                "type": "assign (role) (role)"
              }
            ]
          }
        ]
      }
    },
    "WAITING_SERVER_PREFACE": {
      "entry": [
        {
          "type": "wait_for_server_preface (client) (event)"
        },
        {
          "type": "set (PREFACE_RECEIVED_AT_CLIENT) (msg)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "PREFACE_RECEIVED": [
          {
            "target": "EXCHANGING_SYNC_PREFACE",
            "actions": [
              {
                "type": "assign (client) (client)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (msg) (msg)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              }
            ]
          }
        ]
      }
    },
    "WAITING_CLIENT_PREFACE": {
      "entry": [
        {
          "type": "wait_for_client_preface (server) (event)"
        },
        {
          "type": "set (PREFACE_RECEIVED_AT_SERVER) (msg)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "PREFACE_RECEIVED": [
          {
            "target": "EXCHANGING_SYNC_PREFACE",
            "actions": [
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (msg) (msg)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              }
            ]
          }
        ]
      }
    },
    "EXCHANGING_SYNC_PREFACE": {
      "entry": [
        {
          "type": "call (EXCHANGE_SYNC ctrl msg) (event msg_received)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "WAITING_SERVER_ACK",
            "cond": "equal (role client_val)",
            "actions": [
              {
                "type": "assign (client) (client)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              }
            ]
          },
          {
            "target": "WAITING_CLIENT_ACK",
            "actions": [
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              }
            ]
          }
        ]
      }
    },
    "WAITING_SERVER_ACK": {
      "entry": [
        {
          "type": "wait_for_server_ack (client) (event)"
        },
        {
          "type": "set (ACK_RECEIVED_AT_CLIENT) (msg)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "ACK_RECEIVED": [
          {
            "target": "EXCHANGING_SYNC_ACK",
            "actions": [
              {
                "type": "assign (client) (client)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              },
              {
                "type": "assign (msg) (msg)"
              }
            ]
          }
        ]
      }
    },
    "WAITING_CLIENT_ACK": {
      "entry": [
        {
          "type": "wait_for_client_ack (server) (event)"
        },
        {
          "type": "set (ACK_RECEIVED_AT_SERVER) (msg)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "ACK_RECEIVED": [
          {
            "target": "EXCHANGING_SYNC_ACK",
            "actions": [
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (role) (role)"
              },
              {
                "type": "assign (client_val) (client_val)"
              },
              {
                "type": "assign (msg) (msg)"
              }
            ]
          }
        ]
      }
    },
    "EXCHANGING_SYNC_ACK": {
      "entry": [
        {
          "type": "call (EXCHANGE_SYNC ctrl msg) (event msg_received)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "DONE": [
          {
            "target": "SENDING_CLIENT_FRAMES",
            "cond": "equal (role client_val)",
            "actions": [
              {
                "type": "assign (client) (client)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          },
          {
            "target": "RECEIVING_CLIENT_FRAMES",
            "actions": [
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "SENDING_CLIENT_FRAMES": {
      "entry": [
        {
          "type": "get_from_file (variables client_frames) (client_frames)"
        },
        {
          "type": "send_client_frames (client client_frames) (event)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "FRAMES_SENT": [
          {
            "target": "RECEIVING_SERVER_FRAMES",
            "actions": [
              {
                "type": "assign (client) (client)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              }
            ]
          }
        ]
      }
    },
    "RECEIVING_CLIENT_FRAMES": {
      "entry": [
        {
          "type": "get_from_file (variables client_frames) (client_frames)"
        },
        {
          "type": "receive_client_frames (server client_frames) (result event)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "TEST_PASSED": [
          {
            "target": "SENDING_SERVER_FRAMES",
            "actions": [
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (\"test_passed\") (result)"
              }
            ]
          }
        ],
        "TEST_FAILED": [
          {
            "target": "SENDING_SERVER_FRAMES",
            "actions": [
              {
                "type": "assign (server) (server)"
              },
              {
                "type": "assign (ctrl) (ctrl)"
              },
              {
                "type": "assign (\"test_failed\") (result)"
              }
            ]
          }
        ]
      }
    },
    "RECEIVING_SERVER_FRAMES": {
      "entry": [
        {
          "type": "get_from_file (variables server_frames) (server_frames)"
        },
        {
          "type": "receive_server_frames (client server_frames) (result event)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "TEST_PASSED": [
          {
            "target": "END",
            "actions": [
              {
                "type": "assign (\"test_passed\") (result)"
              }
            ]
          }
        ],
        "TEST_FAILED": [
          {
            "target": "END",
            "actions": [
              {
                "type": "assign (\"test_failed\") (result)"
              }
            ]
          }
        ]
      }
    },
    "SENDING_SERVER_FRAMES": {
      "entry": [
        {
          "type": "get_from_file (variables server_frames) (server_frames)"
        },
        {
          "type": "send_server_frames (server server_frames) (event)"
        },
        {
          "type": "trigger (event)"
        }
      ],
      "on": {
        "FRAMES_SENT": [
          {
            "target": "END",
            "actions": [
              {
                "type": "assign (result) (result)"
              }
            ]
          }
        ]
      }
    },
    "END": {},
    "TIMEOUT": {
      "entry": {
        "type": "set (TIMEOUT) (result)"
      }
    }
  }
}
